{"version":3,"file":"index.js","sources":["../../../../../src/plugin/internal/typedoc/mdn-links/processing/MDNBuildReflectionMap.js","../../../../../src/plugin/internal/typedoc/mdn-links/processing/MDNProcessReflectionMap.js","../../../../../src/plugin/internal/typedoc/mdn-links/utils.js","../../../../../src/plugin/internal/typedoc/mdn-links/renderer/PageRenderer.js","../../../../../src/plugin/internal/typedoc/mdn-links/resolvers/MDNResolver.js","../../../../../src/plugin/internal/typedoc/mdn-links/resolvers/TSResolver.js","../../../../../src/plugin/internal/typedoc/mdn-links/MDNConverter.js","../../../../../src/plugin/internal/typedoc/mdn-links/index.js"],"sourcesContent":["import {\r\n   DefaultTheme,\r\n   ProjectReflection,\r\n   ReflectionKind }     from 'typedoc';\r\n\r\nexport class MDNBuildReflectionMap\r\n{\r\n   /**\r\n    * Detects if a reflection name is a JS symbol.\r\n    *\r\n    * @type {RegExp}\r\n    */\r\n   static #regexIsSymbol = /\\[(?<inner>.*)]/;\r\n\r\n   /**\r\n    * Stores the valid reflection kinds when processing DeclarationReflections.\r\n    *\r\n    * @type {Set<ReflectionKind>}\r\n    */\r\n   static #validReflectionKind = new Set([\r\n      ReflectionKind.Accessor,\r\n      ReflectionKind.Class,\r\n      ReflectionKind.Constructor,\r\n      ReflectionKind.Enum,\r\n      ReflectionKind.EnumMember,\r\n      ReflectionKind.Function,\r\n      ReflectionKind.Interface,\r\n      ReflectionKind.Method,\r\n      ReflectionKind.Namespace,\r\n      ReflectionKind.Property,\r\n      ReflectionKind.TypeAlias,     // TODO: There is a note that this will be deprecated in `0.25.x`!\r\n      ReflectionKind.TypeLiteral,\r\n      ReflectionKind.TypeParameter,\r\n      ReflectionKind.Variable\r\n   ]);\r\n\r\n   /**\r\n    * @param {ReflectionMaps}                reflectionMap -\r\n    *\r\n    * @param {import('typedoc').Application} app -\r\n    *\r\n    * @param {ProjectReflection}             project -\r\n    */\r\n   static buildReflectionMap(reflectionMap, app, project)\r\n   {\r\n      const urlMappings = new DefaultTheme(app.renderer).getUrls(project);\r\n\r\n      /**\r\n       * Creates a top level URL mapping for all main HTML pages.\r\n       *\r\n       * @type {Map<import('typedoc').DeclarationReflection, string>}\r\n       */\r\n      const reflectionUrlMap = new Map(urlMappings.map((mapping) => [mapping.model, mapping.url]));\r\n\r\n      /**\r\n       * Builds the rest of the reflection map data and URLs for all reflections.\r\n       *\r\n       * @param {ProjectReflection | import('typedoc').DeclarationReflection}  reflection -\r\n       *\r\n       * @param {string} parentUrl -\r\n       */\r\n      const visit = (reflection, parentUrl = '') =>\r\n      {\r\n         const reflectionUrl = reflectionUrlMap.get(reflection);\r\n\r\n         const url = reflectionUrl ? reflectionUrl : parentUrl +\r\n          (parentUrl && reflection.parent ? `#${reflection.getAlias()}` : '');\r\n\r\n         if (this.#validReflectionKind.has(reflection.kind))\r\n         {\r\n            const { isSymbol, reflectionName, reflectionParts } = this.#getReflectionData(reflection);\r\n\r\n            // In the case of processing TS libs often there is an interface defined and a subsequent function by the\r\n            // same name so only update the symbol map if an existing interface doesn't exist.\r\n            const currentValue = reflectionMap.external.get(reflectionName);\r\n            if (!isSymbol && (currentValue === void 0 || currentValue?.kind !== ReflectionKind.Interface))\r\n            {\r\n               reflectionMap.external.set(reflectionName, {\r\n                  doc_url: url,\r\n                  kind: reflection.kind\r\n               });\r\n            }\r\n\r\n            reflectionMap.internal.set(reflection, {\r\n               name: reflectionName,\r\n               parents: [],\r\n               parts: reflectionParts,\r\n               hasLinks: false,\r\n               hasCompat: false,\r\n               mdnCompat: {},\r\n               mdnLinks: {}\r\n            });\r\n         }\r\n\r\n         if (reflection.children)\r\n         {\r\n            for (const child of reflection.children) { visit(child, reflectionUrl ? reflectionUrl : url); }\r\n         }\r\n      };\r\n\r\n      visit(project);\r\n   }\r\n\r\n   /**\r\n    * @param {import('typedoc').Reflection}  reflection -\r\n    *\r\n    * @returns {{ isSymbol: boolean, reflectionName: string, reflectionParts: string[] }} The fully qualified symbol\r\n    *          data.\r\n    */\r\n   static #getReflectionData(reflection)\r\n   {\r\n      const parts = [];\r\n\r\n      while (reflection)\r\n      {\r\n         // Do not include the project reflection.\r\n         if (reflection instanceof ProjectReflection) { break; }\r\n\r\n         parts.unshift(reflection.name);\r\n         reflection = reflection.parent;\r\n      }\r\n\r\n      const reflectionName = parts.join('.');\r\n\r\n      let isSymbol = false;\r\n\r\n      // Process parts and rename any `[<inner>]` Symbol references with `@@<inner>` for MDN browser compat lookup.\r\n      for (let cntr = 0; cntr < parts.length; cntr++)\r\n      {\r\n         if (this.#regexIsSymbol.test(parts[cntr]))\r\n         {\r\n            isSymbol = true;\r\n            parts[cntr] = parts[cntr].replace(this.#regexIsSymbol, '@@$<inner>');\r\n         }\r\n      }\r\n\r\n      return { isSymbol, reflectionName, reflectionParts: parts };\r\n   }\r\n}","import {\r\n   ProjectReflection,\r\n   ReferenceType }      from 'typedoc';\r\n\r\nexport class MDNProcessReflectionMap\r\n{\r\n   /**\r\n    * TODO: THIS NEEDS TO BE VETTED! Currently only finding inheritance chains for main interfaces. Must validate\r\n    * functions / other reflection kinds.\r\n    *\r\n    * @param {ProjectReflection} project -\r\n    *\r\n    * @param {import('typedoc').DeclarationReflection}   reflection -\r\n    *\r\n    * @returns {DataReflectionParents} Any parent reflections.\r\n    */\r\n   static #getInheritanceTree(project, reflection)\r\n   {\r\n      const visited = new Set();\r\n\r\n      const visit = (reflection) =>\r\n      {\r\n         if (visited.has(reflection)) { return null; }\r\n\r\n         visited.add(reflection);\r\n\r\n         const parents = [];\r\n\r\n         if (reflection.extendedTypes)\r\n         {\r\n            for (const extendedType of reflection.extendedTypes)\r\n            {\r\n               if (extendedType instanceof ReferenceType && extendedType._target)\r\n               {\r\n                  let parentReflection = project.getReflectionById(extendedType._target);\r\n\r\n                  // Keep resolving if another reference type is returned.\r\n                  while (parentReflection && parentReflection instanceof ReferenceType && parentReflection._target)\r\n                  {\r\n                     parentReflection = project.getReflectionById(extendedType._target);\r\n                  }\r\n\r\n                  if (parentReflection)\r\n                  {\r\n                     const parent = visit(parentReflection);\r\n                     if (parent) { parents.push(parent); }\r\n                  }\r\n               }\r\n            }\r\n         }\r\n\r\n         return {\r\n            id: reflection.id,\r\n            kind: reflection.kind,\r\n            name: reflection.getFullName(),\r\n            parts: reflection.getFullName().split('.'),\r\n            parents\r\n         };\r\n      };\r\n\r\n      return visit(reflection);\r\n   }\r\n\r\n   /**\r\n    * @param {ReflectionMaps}    reflectionMap -\r\n    *\r\n    * @param {ProjectReflection} project -\r\n    */\r\n   static processReflectionMap(reflectionMap, project)\r\n   {\r\n      // Resolve inheritance chains.\r\n      for (const reflection of reflectionMap.internal.keys())\r\n      {\r\n         if (reflection instanceof ProjectReflection) { continue; }\r\n\r\n         const result = this.#getInheritanceTree(project, reflection);\r\n\r\n         if (result.parents.length)\r\n         {\r\n            reflectionMap.internal.get(reflection).parents = result.parents;\r\n         }\r\n      }\r\n   }\r\n}","/**\r\n * Serializes value to a string escaping it so that it can be set as a web component attribute.\r\n *\r\n * @param {*}  value - Value to stringify and escape.\r\n *\r\n * @returns {string} Escaped string.\r\n */\r\nexport function escapeAttr(value)\r\n{\r\n   return JSON.stringify(value)\r\n   .replace(/</g, \"\\\\u003c\")\r\n   .replace(/>/g, \"\\\\u003e\")\r\n   .replace(/&/g, \"\\\\u0026\")\r\n   .replace(/'/g, \"\\\\u0027\")\r\n   .replace(/\"/g, \"\\\\u0022\");\r\n}\r\n\r\n/**\r\n * Deserializes an escaped string and parses it as JSON.\r\n *\r\n * @param {string}   value - Value to unescape.\r\n *\r\n * @returns {*} Deserialized variable.\r\n */\r\nexport function unescapeAttr(value)\r\n{\r\n   return JSON.parse(value\r\n    .replace(/\\\\u003c/g, \"<\")\r\n    .replace(/\\\\u003e/g, \">\")\r\n    .replace(/\\\\u0026/g, \"&\")\r\n    .replace(/\\\\u0027/g, \"'\")\r\n    .replace(/\\\\u0022/g, '\"'));\r\n}","import path                   from 'node:path';\r\nimport { fileURLToPath }      from 'node:url';\r\n\r\nimport { packAndDeflateB64 }  from '#runtime/data/format/msgpack/compress';\r\n\r\nimport fs                     from 'fs-extra';\r\n\r\nimport { load }               from 'cheerio';\r\n\r\nimport {\r\n   PageEvent,\r\n   RendererEvent }            from 'typedoc';\r\n\r\nimport { escapeAttr }         from '../utils.js';\r\n\r\nexport class PageRenderer\r\n{\r\n   /** @type {import('typedoc').Application} */\r\n   #app;\r\n\r\n   /** @type {ReflectionMaps} */\r\n   #reflectionMaps;\r\n\r\n   /**\r\n    * @param {import('typedoc').Application} app -\r\n    *\r\n    * @param {ReflectionMaps}  reflectionMaps -\r\n    */\r\n   constructor(app, reflectionMaps)\r\n   {\r\n      this.#app = app;\r\n      this.#reflectionMaps = reflectionMaps;\r\n\r\n      this.#app.renderer.on(PageEvent.END, this.#handlePageEnd, this);\r\n      this.#app.renderer.once(RendererEvent.END, this.#handleRendererEnd, this);\r\n   }\r\n\r\n   /**\r\n    * Adds a script element to load the web component bundle supporting MDN links and compatibility charts.\r\n    *\r\n    * @param {import('cheerio').Cheerio} $ -\r\n    *\r\n    * @param {PageEvent}   page -\r\n    *\r\n    * @returns {Map<string, DataMDNLinks>} The MDN links loaded into global script scope.\r\n    */\r\n   #addScripts($, page)\r\n   {\r\n      // Get asset path to script by counting the number of `/` characters then building the relative path.\r\n      const count = (page.url.match(/\\//) ?? []).length;\r\n      const scriptPath = `${'../'.repeat(count)}assets/mdn-web-components.js`;\r\n\r\n      const headEl = $('head');\r\n\r\n      // Append script to the head element.\r\n      headEl.append($(`<script src=\"${scriptPath}\" type=\"module\" />`));\r\n\r\n      // Load all link data into global variable MDNLinks ------------------------------------------------------------\r\n\r\n      /**\r\n       * This is where we abuse the static page nature of the default TypeDoc template and load an adhoc script that\r\n       * creates a global variable `MDNLinks` with all the link data for the current page and children. The web\r\n       * components access `globalThis.MDNLinks` and as such we can simply pass the name of the symbol or wrap an\r\n       * existing symbol string in the template with the MDNLinksPopup web component.\r\n       *\r\n       * Since this adhoc script is a normal JS script it loads before the ESM code for web components and is not\r\n       * deferred.\r\n       */\r\n\r\n      /**\r\n       * Stores the localized links to this page that are loaded into the global scope at `globalThis.MDNLinks`.\r\n       *\r\n       * @type {Map<string, DataMDNLinks>}\r\n       */\r\n      const mdnLinks = new Map();\r\n\r\n      const mainLink = this.#reflectionMaps.internal.get(page.model);\r\n\r\n      if (mainLink.hasLinks)\r\n      {\r\n         mdnLinks.set(page.model.name, mainLink.mdnLinks);\r\n      }\r\n\r\n      if (Array.isArray(page.model.children))\r\n      {\r\n         for (const child of page.model.children)\r\n         {\r\n            const childLink = this.#reflectionMaps.internal.get(child);\r\n            if (childLink?.hasLinks)\r\n            {\r\n               mdnLinks.set(child.name, childLink.mdnLinks);\r\n            }\r\n         }\r\n      }\r\n\r\n      headEl.append($(`<meta name=\"MDNLinks\" data-bcmp=\"${packAndDeflateB64(mdnLinks)}\">`));\r\n\r\n      return mdnLinks;\r\n   }\r\n\r\n   /**\r\n    * Modifications for every page.\r\n    *\r\n    * @param {import('cheerio').Cheerio}  $ -\r\n    */\r\n   #augmentGlobal($)\r\n   {\r\n   }\r\n\r\n   /**\r\n    * Appends mdn-links web component to DMT title header flexbox.\r\n    *\r\n    * @param {import('cheerio').Cheerio}  $ -\r\n    *\r\n    * @param {PageEvent}   page - The main page.\r\n    */\r\n   #augmentTitleLink($, page)\r\n   {\r\n      $('.dmt-title-header-flex').append(`<wc-mdn-links data=\"${escapeAttr(page.model.name)}\" />`);\r\n   }\r\n\r\n   /**\r\n    * Augment all member links that are found in `mdnLinks`.\r\n    *\r\n    * @param {import('cheerio').Cheerio}  $ -\r\n    *\r\n    * @param {Map<string, DataMDNLinks>} mdnLinks - The MDN links loaded into global script scope.\r\n    */\r\n   #augmentMemberLinks($, mdnLinks)\r\n   {\r\n      $('.tsd-panel.tsd-member .tsd-anchor-link').each((i, node) =>\r\n      {\r\n         const el = $(node);\r\n         const symbolName = el.find('span').text();\r\n         const mdnLink = mdnLinks.get(symbolName);\r\n\r\n         if (mdnLink) { el.append(`<wc-mdn-links data=\"${escapeAttr(symbolName)}\" />`); }\r\n      });\r\n   }\r\n\r\n   /**\r\n    * @param {PageEvent}   page -\r\n    */\r\n   #handlePageEnd(page)\r\n   {\r\n      const symbolDataInt = this.#reflectionMaps.internal.get(page.model);\r\n\r\n      const $ = load(page.contents);\r\n\r\n      this.#augmentGlobal($);\r\n\r\n      if (symbolDataInt)\r\n      {\r\n         // Append scripts to load web components and adhoc global MDNLinks. The loaded links are returned.\r\n         const mdnLinks = this.#addScripts($, page);\r\n\r\n         if (symbolDataInt.hasLinks)\r\n         {\r\n            this.#augmentTitleLink($, page);\r\n            this.#augmentMemberLinks($, mdnLinks);\r\n         }\r\n      }\r\n\r\n      page.contents = $.html();\r\n   }\r\n\r\n   /**\r\n    * Copy web components bundle to docs output assets directory.\r\n    */\r\n   #handleRendererEnd()\r\n   {\r\n      const outDir = `${this.#app.options.getValue('out')}${path.sep}assets`;\r\n      const localDir = path.dirname(fileURLToPath(import.meta.url));\r\n\r\n      this.#app.logger.verbose(`[mdn-links] Copying 'mdn-web-components.js' to output assets directory.`);\r\n\r\n      fs.copyFileSync(`${localDir}${path.sep}mdn-web-components.js`, `${outDir}${path.sep}mdn-web-components.js`);\r\n      fs.copyFileSync(`${localDir}${path.sep}mdn-web-components.js.map`,\r\n       `${outDir}${path.sep}mdn-web-components.js.map`);\r\n   }\r\n}","import browserCompatData from '@mdn/browser-compat-data/forLegacyNode';\r\n\r\n/**\r\n * Provides resolution for all Typescript lib symbols against the MDN browser compatibility data adding MDN link & spec\r\n * URLs to the internal and external symbol maps. Additionally, the internal symbol map also links the status and\r\n * support blocks to be displayed in the generated documentation.\r\n */\r\nexport class MDNResolver\r\n{\r\n   /**\r\n    * Traverse inheritance tree and collect parents for each node.\r\n    *\r\n    * @param {DataIntReflectionLink}  startNode - The initial node to process.\r\n    *\r\n    * @returns {DataReflectionParents[]} Returns an array of all parent nodes for the given node.\r\n    */\r\n   static #getParents(startNode)\r\n   {\r\n      if (!startNode?.parents?.length) { return []; }\r\n\r\n      const processParents = (node, parents = []) =>\r\n      {\r\n         // Add the current node to the parents array if defined.\r\n         if (node) { parents.push(node); }\r\n\r\n         // If the node has parents, recurse into them\r\n         if (node.parents)\r\n         {\r\n            for (const parent of node.parents) { processParents(parent, [...parents]); }\r\n         }\r\n\r\n         return parents;\r\n      };\r\n\r\n      const results = [];\r\n\r\n      if (startNode.parents)\r\n      {\r\n         for (const parent of startNode.parents)\r\n         {\r\n            results.push(...processParents(parent));\r\n         }\r\n      }\r\n\r\n      return results;\r\n   }\r\n\r\n\r\n   /**\r\n    * @param {DataIntReflectionLink}  internalEntry -\r\n    *\r\n    * @param {import('@mdn/browser-compat-data').Identifier} compatIdentifier -\r\n    *\r\n    * @returns {({\r\n    *    mdn_url: string,\r\n    *    spec_url: string,\r\n    *    status: import('@mdn/browser-compat-data').StatusBlock,\r\n    *    support: import('@mdn/browser-compat-data').SupportBlock\r\n    * } | undefined)} Attempts to resolve the symbol name against MDN compatibility data.\r\n    */\r\n   static #getMDNData(internalEntry, compatIdentifier)\r\n   {\r\n      // Start with the top-level javascript category in the compat data.\r\n      let current = compatIdentifier;\r\n\r\n      // Traverse the compat data according to the parts of the symbol.\r\n      for (const part of internalEntry.parts)\r\n      {\r\n         if (!current[part]) { current = void 0; break; }\r\n\r\n         // Move to the next part.\r\n         current = current[part];\r\n      }\r\n\r\n      // TODO: This only handles interfaces currently!\r\n      // Attempt to resolve any inheritedFrom data.\r\n      if (!current && internalEntry.parents.length)\r\n      {\r\n         const parents = this.#getParents(internalEntry);\r\n\r\n         for (const parent of parents)\r\n         {\r\n            // Start with the top-level javascript category in the compat data.\r\n            let currentParent = compatIdentifier;\r\n\r\n            // Traverse the compat data according to the parts of the symbol.\r\n            for (const part of parent.parts)\r\n            {\r\n               if (!currentParent[part]) { currentParent = void 0; break; }\r\n\r\n               // Move to the next part.\r\n               currentParent = currentParent[part];\r\n            }\r\n\r\n            if (currentParent)\r\n            {\r\n               current = currentParent;\r\n               break;\r\n            }\r\n         }\r\n      }\r\n\r\n      if (!current) { return void 0; }\r\n\r\n      // Return the MDN / spec URLs and status / support blocks.\r\n      return {\r\n         mdn_url: current?.__compat?.mdn_url,\r\n         spec_url: current?.__compat?.spec_url,\r\n         status: current?.__compat?.status,\r\n         support: current?.__compat?.support\r\n      };\r\n   }\r\n\r\n   /**\r\n    * Tests if a DataExtReflectionLink already has defined MDN data.\r\n    *\r\n    * @param {DataExtReflectionLink} data - Reflection link data to test.\r\n    *\r\n    * @returns {boolean} If the reflection link data has MDN data already defined.\r\n    */\r\n   static #hasMDNCompatData(data)\r\n   {\r\n      return typeof data?.mdn_url === 'string' || typeof data?.spec_url === 'string';\r\n   }\r\n\r\n   /**\r\n    * @param {ReflectionMaps} symbolMaps -\r\n    */\r\n   static resolve(symbolMaps)\r\n   {\r\n      for (const internalEntry of symbolMaps.internal.values())\r\n      {\r\n         const mdnJSData = MDNResolver.#getMDNData(internalEntry, browserCompatData.javascript.builtins);\r\n\r\n         if (mdnJSData)\r\n         {\r\n            internalEntry.mdnCompat.status = mdnJSData.status;\r\n            internalEntry.mdnCompat.support = mdnJSData.support;\r\n            internalEntry.mdnLinks.mdn_url = mdnJSData.mdn_url;\r\n            internalEntry.mdnLinks.spec_url = mdnJSData.spec_url;\r\n\r\n            if (mdnJSData.status || mdnJSData.support) { internalEntry.hasCompat = true; }\r\n            if (mdnJSData.mdn_url || mdnJSData.spec_url) { internalEntry.hasLinks = true; }\r\n\r\n            const externalEntry = symbolMaps.external.get(internalEntry.name);\r\n            if (externalEntry && !MDNResolver.#hasMDNCompatData(externalEntry))\r\n            {\r\n               externalEntry.mdn_url = mdnJSData.mdn_url;\r\n               externalEntry.spec_url = mdnJSData.spec_url;\r\n            }\r\n\r\n            continue;\r\n         }\r\n\r\n         const mdnAPIData = MDNResolver.#getMDNData(internalEntry, browserCompatData.api);\r\n\r\n         if (mdnAPIData)\r\n         {\r\n            internalEntry.mdnCompat.status = mdnAPIData.status;\r\n            internalEntry.mdnCompat.support = mdnAPIData.support;\r\n            internalEntry.mdnLinks.mdn_url = mdnAPIData.mdn_url;\r\n            internalEntry.mdnLinks.spec_url = mdnAPIData.spec_url;\r\n\r\n            if (mdnAPIData.status || mdnAPIData.support) { internalEntry.hasCompat = true; }\r\n            if (mdnAPIData.mdn_url || mdnAPIData.spec_url) { internalEntry.hasLinks = true; }\r\n\r\n            const externalEntry = symbolMaps.external.get(internalEntry.name);\r\n            if (externalEntry && !MDNResolver.#hasMDNCompatData(externalEntry))\r\n            {\r\n               externalEntry.mdn_url = mdnAPIData.mdn_url;\r\n               externalEntry.spec_url = mdnAPIData.spec_url;\r\n            }\r\n         }\r\n      }\r\n   }\r\n}","/**\r\n * Resolves utility and template literal types to Typescript documentation.\r\n */\r\nexport class TSResolver\r\n{\r\n   static #templateLiteralTypes = new Map([\r\n      ['Uppercase', 'uppercasestringtype'],\r\n      ['Lowercase', 'lowercasestringtype'],\r\n      ['Capitalize', 'capitalizestringtype'],\r\n      ['Uncapitalize', 'uncapitalizestringtype']\r\n   ]);\r\n\r\n   static #utilityTypes = new Map([\r\n      ['Awaited', 'awaitedtype'],\r\n      ['Partial', 'partialtype'],\r\n      ['Required', 'requiredtype'],\r\n      ['Readonly', 'readonlytype'],\r\n      ['Record', 'recordkeys-type'],\r\n      ['Pick', 'picktype-keys'],\r\n      ['Omit', 'omittype-keys'],\r\n      ['Exclude', 'excludeuniontype-excludedmembers'],\r\n      ['Extract', 'extracttype-union'],\r\n      ['NonNullable', 'nonnullabletype'],\r\n      ['Parameters', 'parameterstype'],\r\n      ['ConstructorParameters', 'constructorparameterstype'],\r\n      ['ReturnType', 'returntypetype'],\r\n      ['InstanceType', 'instancetypetype'],\r\n      ['ThisParameterType', 'thisparametertypetype'],\r\n      ['OmitThisParameter', 'omitthisparametertype'],\r\n      ['ThisType', 'thistypetype']\r\n   ]);\r\n\r\n   /**\r\n    * Tests if a DataExtReflectionLink already has defined TS data.\r\n    *\r\n    * @param {DataExtReflectionLink} data - Reflection link data to test.\r\n    *\r\n    * @returns {boolean} Does the reflection link data have a TS url already?\r\n    */\r\n   static #hasTSData(data)\r\n   {\r\n      return typeof data?.ts_url === 'string';\r\n   }\r\n\r\n   /**\r\n    * @param {ReflectionMaps} reflectionMaps -\r\n    */\r\n   static resolve(reflectionMaps)\r\n   {\r\n      for (const internalEntry of reflectionMaps.internal.values())\r\n      {\r\n         const templateHash = TSResolver.#templateLiteralTypes.get(internalEntry.name);\r\n         if (templateHash)\r\n         {\r\n            const ts_url = `https://www.typescriptlang.org/docs/handbook/2/template-literal-types.html#${templateHash}`;\r\n            internalEntry.mdnLinks.ts_url = ts_url;\r\n            internalEntry.hasLinks = true;\r\n\r\n            const externalEntry = reflectionMaps.external.get(internalEntry.name);\r\n            if (externalEntry && !TSResolver.#hasTSData(externalEntry))\r\n            {\r\n               externalEntry.ts_url = ts_url;\r\n            }\r\n\r\n            continue;\r\n         }\r\n\r\n         const utilHash = TSResolver.#utilityTypes.get(internalEntry.name);\r\n         if (utilHash)\r\n         {\r\n            const ts_url = `https://www.typescriptlang.org/docs/handbook/utility-types.html#${utilHash}`;\r\n\r\n            internalEntry.mdnLinks.ts_url = ts_url;\r\n            internalEntry.hasLinks = true;\r\n\r\n            const externalEntry = reflectionMaps.external.get(internalEntry.name);\r\n            if (externalEntry && !TSResolver.#hasTSData(externalEntry))\r\n            {\r\n               externalEntry.ts_url = ts_url;\r\n            }\r\n         }\r\n      }\r\n   }\r\n}\r\n","import fs                     from 'fs-extra';\r\n\r\nimport { Converter }          from 'typedoc';\r\n\r\nimport {\r\n   MDNBuildReflectionMap,\r\n   MDNProcessReflectionMap }  from './processing/index.js';\r\n\r\nimport { PageRenderer }       from './renderer/PageRenderer.js';\r\n\r\nimport {\r\n   MDNResolver,\r\n   TSResolver }               from './resolvers/index.js';\r\n\r\n/**\r\n * Provides symbol map generation linking MDN browser compatibility data to generated TS lib docs.\r\n */\r\nexport class MDNConverter\r\n{\r\n   /** @type {import('typedoc').Application} */\r\n   #app;\r\n\r\n   /**\r\n    * This is the output path for the external symbol map.\r\n    *\r\n    * @type {string}\r\n    */\r\n   #mdnDataPath;\r\n\r\n   /**\r\n    * @type {ReflectionMaps}\r\n    */\r\n   #reflectionMaps = {\r\n      external: new Map(),\r\n      internal: new Map()\r\n   };\r\n\r\n   /**\r\n    * @param {import('typedoc').Application} app - Typedoc application\r\n    */\r\n   constructor(app)\r\n   {\r\n      this.#app = app;\r\n\r\n      this.#mdnDataPath = app.options.getValue('mdnDataPath');\r\n\r\n      if (typeof this.#mdnDataPath !== 'string') { throw new TypeError(`'mdnDataPath' option is not a string.`); }\r\n\r\n      this.#app.converter.on(Converter.EVENT_RESOLVE_END, this.#handleResolveEnd, this);\r\n   }\r\n\r\n   /**\r\n    * @param {import('typedoc').Context}  context -\r\n    */\r\n   #handleResolveEnd(context)\r\n   {\r\n      // Register the PageRenderer in the resolve end callback to ensure that it runs after the theme callbacks.\r\n      new PageRenderer(this.#app, this.#reflectionMaps);\r\n\r\n      MDNBuildReflectionMap.buildReflectionMap(this.#reflectionMaps, this.#app, context.project);\r\n      MDNProcessReflectionMap.processReflectionMap(this.#reflectionMaps, context.project);\r\n\r\n      MDNResolver.resolve(this.#reflectionMaps);\r\n      TSResolver.resolve(this.#reflectionMaps);\r\n\r\n      fs.ensureDirSync(this.#mdnDataPath);\r\n\r\n      // Serialize the symbol map as object then save the keys / symbol names separately. Both of these JSON files are\r\n      // used by other plugins.\r\n      fs.writeFileSync(`${this.#mdnDataPath}/reflection-mapping.json`,\r\n       JSON.stringify(Object.fromEntries(this.#reflectionMaps.external)), 'utf-8');\r\n\r\n      fs.writeFileSync(`${this.#mdnDataPath}/reflection-names.json`,\r\n       JSON.stringify([...this.#reflectionMaps.external.keys()]), 'utf-8');\r\n   }\r\n}","import { MDNConverter } from './MDNConverter.js';\r\n\r\n/**\r\n * Provides a plugin for Typedoc to link Typescript built-in declaration symbols to MDN and specification documentation.\r\n * This plugin generates the data consumed for the `ts-links` external plugin.\r\n *\r\n * @param {import('typedoc').Application} app - Typedoc Application\r\n */\r\nexport function load(app)\r\n{\r\n   new MDNConverter(app);\r\n}\r\n\r\n"],"names":["load"],"mappings":"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"}